/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2022-09-13 18:22:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import infinite.JSPDev.Person;
import infinite.JSPDev.PersonDAO;

public final class Home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("infinite.JSPDev.PersonDAO");
    _jspx_imports_classes.add("infinite.JSPDev.Person");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<!-- CSS only -->\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx\" crossorigin=\"anonymous\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");

	PersonDAO dao=new PersonDAO();
	Person[] arrPerson=dao.showPersonData();
	String status=request.getParameter("status");
	
	
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	");

	if(status!=null)
	{
		
      out.write("\r\n");
      out.write("		<script>\r\n");
      out.write("		swal(\"Good job!\", \"You clicked the button!\", \"success\");\r\n");
      out.write("		</script>\r\n");
      out.write("		");
 
	}
	
      out.write("\r\n");
      out.write("	<table align=\"center\" style=\"padding: 20px\" class=\"table table-hover\">\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th>SSN</th>\r\n");
      out.write("			<th>ID</th>\r\n");
      out.write("			<th>Person Name</th>\r\n");
      out.write("			<th>DOB</th>\r\n");
      out.write("			<th>gender</th>\r\n");
      out.write("			<th>UPDATE</th>\r\n");
      out.write("			<th>DELETE</th>\r\n");
      out.write("	    </tr>\r\n");
      out.write("	    \r\n");
      out.write("	    ");

	    	for(Person ps: arrPerson)
	    	{
	    
      out.write("\r\n");
      out.write("	    <tr>\r\n");
      out.write("	    <th>");
      out.print( ps.getSsn() );
      out.write("</th>\r\n");
      out.write("	    <th>");
      out.print( ps.getId() );
      out.write("</th>\r\n");
      out.write("	    <th>");
      out.print( ps.getPersonname() );
      out.write("</th>\r\n");
      out.write("	    <th>");
      out.print( ps.getDob() );
      out.write("</th>\r\n");
      out.write("	    <th>");
      out.print( ps.getGender() );
      out.write("</th>\r\n");
      out.write("	    <th><a href=\"updateperson.jsp?ssn=");
      out.print( ps.getSsn() );
      out.write("\" class=\"btn btn-info\">UPDATE</a> </th>\r\n");
      out.write("	    <th><a href=\"deleteperson.jsp?ssn=");
      out.print( ps.getSsn() );
      out.write("\" class=\"btn btn-danger\">DELETE</a> </th>\r\n");
      out.write("	    \r\n");
      out.write("	    </tr>\r\n");
      out.write("	    ");

	    	}
	    
      out.write("\r\n");
      out.write("	</table>\r\n");
      out.write("	<a href=\"adddata.jsp\" type=\"submit\">ADD DATA</a>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
